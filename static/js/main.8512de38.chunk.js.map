{"version":3,"sources":["Components/Title.js","Components/Searchbar.js","Components/ResultsSong.js","Components/ClearBtn.js","Components/ResultsTable.js","Components/Results.js","App.js","index.js"],"names":["Styles","styled","div","_templateObject","Title","react_default","a","createElement","Searchbar_templateObject","Searchbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","typeahead","React","createRef","_this2","Searchbar_Styles","className","Form_default","onSubmit","e","handleSubmit","getInstance","clear","InputGroup_default","size","lib","id","labelKey","options","songList","onInputChange","handleSearch","onChange","handleSelect","minLength","bsSize","placeholder","ref","Append","Button_default","variant","type","Spinner_default","as","animation","role","aria-hidden","loading","Component","ResultsSong_templateObject","ResultsSong","ResultsSong_Styles","resultsSong","ClearBtn_templateObject","ClearBtn","ClearBtn_Styles","onClick","handleClear","ResultsTable_templateObject","ResultsTable","ResultsTable_Styles","resultsArr","length","Table_default","striped","bordered","hover","map","res","book","page","Components_ClearBtn","Results_templateObject","Results","Results_Styles","Components_ResultsSong","Components_ResultsTable","App","state","searchValue","searchPlaceholder","typeaheadRef","componentDidMount","fetch","method","mode","then","json","setState","data","console","log","toggleLoading","headers","Content-Type","body","JSON","stringify","title","preventDefault","Components_Title","Components_Searchbar","Components_Results","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8512de38.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  font-family: \"Permanent Marker\", sans-serif;\n  font-size: 60px;\n  padding-bottom: 40px;\n\n  @media (max-width: 480px) {\n    font-size: 40px;\n  }\n`;\n\nconst Title = () => (\n  <Styles>\n    <div>RealBookIndex</div>\n  </Styles>\n);\n\nexport default Title;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n// import FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nconst Styles = styled.div`\n  .hidden {\n    display: none;\n  }\n  .text {\n    padding-left: 13px;\n  }\n\n  @media (max-width: 480px) {\n    .form-control {\n      font-size: 20px;\n    }\n\n    .btn {\n      font-size: medium !important;\n    }\n\n    .mb-3 {\n      width: 90vw;\n    }\n  }\n`;\n\nclass Searchbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.typeahead = React.createRef();\n  }\n\n  render() {\n    return (\n      <Styles>\n        <div className=\"main\">\n          <Form\n            onSubmit={e => {\n              this.props.handleSubmit(e);\n              this.typeahead.getInstance().clear();\n            }}\n          >\n            <InputGroup className=\"mb-3\" size=\"lg\">\n              <Typeahead\n                id=\"typeahead\"\n                labelKey=\"song\"\n                options={this.props.songList}\n                onInputChange={this.props.handleSearch}\n                onChange={this.props.handleSelect}\n                minLength={2}\n                bsSize=\"large\"\n                placeholder=\"Enter song title...\"\n                ref={typeahead => (this.typeahead = typeahead)}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" type=\"submit\">\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                    className={this.props.loading ? \"\" : \"hidden\"}\n                  />\n                  <span className=\"sr-only\">Loading...</span>\n                  <span className=\"text\">Search</span>\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form>\n        </div>\n      </Styles>\n    );\n  }\n}\n\n// const Searchbar = props => (\n//   <Styles>\n//     <div className=\"main\">\n//       <Form onSubmit={props.handleSubmit}>\n//         <InputGroup className=\"mb-3\" size=\"lg\">\n//           <Typeahead\n//             id=\"typeahead\"\n//             labelKey=\"song\"\n//             options={props.songList}\n//             onInputChange={props.handleSearch}\n//             onChange={props.handleSelect}\n//             minLength={2}\n//             bsSize=\"large\"\n//             placeholder=\"Enter song title...\"\n//             ref={typeahead => console.log(typeahead)}\n//           />\n//           <InputGroup.Append>\n//             <Button variant=\"outline-secondary\" type=\"submit\">\n//               <Spinner\n//                 as=\"span\"\n//                 animation=\"border\"\n//                 size=\"sm\"\n//                 role=\"status\"\n//                 aria-hidden=\"true\"\n//                 className={props.loading ? \"\" : \"hidden\"}\n//               />\n//               <span className=\"sr-only\">Loading...</span>\n//               <span className=\"text\">Search</span>\n//             </Button>\n//           </InputGroup.Append>\n//         </InputGroup>\n//       </Form>\n//     </div>\n//   </Styles>\n// );\n\nexport default Searchbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .song {\n    font-size: 24px;\n    padding-bottom: 15px;\n  }\n`;\n\nconst ResultsSong = props => (\n  <Styles>\n    <div className=\"song\">{props.resultsSong}</div>\n  </Styles>\n);\n\nexport default ResultsSong;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  padding-bottom: 60px;\n`;\n\nconst ClearBtn = props => (\n  <Styles className=\"clear\">\n    <Button variant=\"secondary\" onClick={props.handleClear}>\n      Clear\n    </Button>\n  </Styles>\n);\n\nexport default ClearBtn;\n","import React from \"react\";\nimport ClearBtn from \"./ClearBtn\";\nimport Table from \"react-bootstrap/Table\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n\n  @media (max-width: 480px) {\n    font-size: 14px;\n\n    .table {\n      width: 90vw;\n    }\n  }\n`;\n\nconst ResultsTable = props => (\n  <Styles className={props.resultsArr.length < 1 ? \"hidden\" : \"\"}>\n    <Table striped bordered hover variant=\"dark\" className=\"table\">\n      <thead>\n        <tr>\n          <th>Book</th>\n          <th>Page</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.resultsArr.map(res => (\n          <tr>\n            <td>{res.book}</td>\n            <td>{res.page}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n    <ClearBtn handleClear={props.handleClear} />\n  </Styles>\n);\n\nexport default ResultsTable;\n","import React from \"react\";\nimport ResultsSong from \"./ResultsSong\";\nimport ResultsTable from \"./ResultsTable\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  font-family: \"Permanent Marker\", sans-serif;\n  font-size: 50px;\n\n  .hidden {\n    display: none;\n  }\n`;\n\nconst Results = props => (\n  <Styles>\n    <div className=\"main\">\n      <ResultsSong resultsSong={props.resultsSong} />\n      <ResultsTable\n        resultsArr={props.resultsArr}\n        handleClear={props.handleClear}\n      />\n    </div>\n  </Styles>\n);\nexport default Results;\n","import React from \"react\";\nimport Title from \"./Components/Title\";\nimport Searchbar from \"./Components/Searchbar\";\nimport Results from \"./Components/Results\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    searchValue: \"\",\n    searchPlaceholder: \"Enter song title\",\n    resultsArr: [],\n    resultsSong: \"\",\n    loading: false,\n    songList: [],\n    typeaheadRef: {}\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://realbookindex-api.herokuapp.com/\", {\n      method: \"GET\",\n      mode: \"cors\"\n    })\n      .then(res => res.json())\n      .then(res => this.setState({ songList: res.data }, () => {}));\n  };\n\n  handleSearch = e => {\n    this.setState({ searchValue: e }, () => console.log(e));\n  };\n\n  handleSelect = e => {\n    this.setState({ searchValue: e }, () => console.log(e));\n  };\n\n  handleSubmit = e => {\n    console.log(this.typeahead);\n    this.toggleLoading();\n    fetch(\"https://realbookindex-api.herokuapp.com/\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: this.state.searchValue\n      })\n    })\n      .then(res => res.json())\n      .then(res =>\n        this.setState(\n          {\n            resultsArr: res.data.length > 0 ? res.data : [],\n            resultsSong: res.data.length > 0 ? res.data[0].title : \"Not Found\",\n            searchValue: \"\"\n          },\n          () => {\n            this.toggleLoading();\n          }\n        )\n      );\n\n    e.preventDefault();\n  };\n\n  handleClear = () => {\n    this.setState({ resultsArr: [], resultsSong: \"\", searchValue: \"\" }, () => {\n      this.handleSearch(\"\");\n    });\n  };\n\n  toggleLoading = () => this.setState({ loading: !this.state.loading });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Title />\n          <Searchbar\n            handleSubmit={this.handleSubmit}\n            handleSearch={this.handleSearch}\n            handleSelect={this.handleSelect}\n            searchValue={this.state.searchValue}\n            loading={this.state.loading}\n            songList={this.state.songList}\n          />\n          <Results\n            resultsArr={this.state.resultsArr}\n            resultsSong={this.state.resultsSong}\n            handleClear={this.handleClear}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}